---
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/Card.astro';
import Button from '../../components/Button.astro';
import Table from '../../components/Table.astro';
import ResultsChart from '../../components/ResultsChart.astro';

// Get the site parameter
const { site } = Astro.params;

// Site data - Get from database
import { sql } from '../../utils/db';

let currentSite = null;
let sampleData = [];
let latestSample = null;

try {
  // Get site information
  const siteRows = await sql`
    SELECT id, slug, name, lat, lng, notes
    FROM sites 
    WHERE slug = ${site}
    LIMIT 1
  `;
  
  if (siteRows.length === 0) {
    return Astro.redirect('/results/', 302);
  }
  
  currentSite = siteRows[0];
  
  // Get recent sample data for display (last 10 samples)
  const dataResponse = await fetch(`${Astro.url.origin}/api/site-series?site=${site}&limit=10`);
  if (dataResponse.ok) {
    const data = await dataResponse.json();
    sampleData = data.samples.map(sample => {
      const eColi = sample.results.find(r => r.param === 'e_coli')?.value || 0;
      const enterococci = sample.results.find(r => r.param === 'intestinal_enterococci')?.value || 0;
      
      return {
        date: new Date(sample.sampled_at).toLocaleDateString(),
        rainfall24h: sample.rainfall_24h_mm || 0,
        rainfall72h: sample.rainfall_72h_mm || 0,
        eColi,
        enterococci,
        notes: sample.notes
      };
    });
    
    latestSample = sampleData[0];
  }
  
} catch (error) {
  console.error('Error loading site data:', error);
  return Astro.redirect('/results/', 302);
}

function getResultClass(value: number): string {
  if (value < 100) return 'result-safe';
  if (value < 1000) return 'result-moderate';
  return 'result-high';
}
---

<Layout title={`${currentSite.name} Results - Drip Drip Tamar`}>
  <main class="max-w-6xl mx-auto px-4 py-8">
    <nav class="mb-8">
      <a href="/results/" class="text-primary hover:underline text-sm font-medium">
        ‚Üê Back to All Sites
      </a>
    </nav>

    <header class="mb-8">
      <h1 class="text-4xl font-bold tracking-tight text-gray-900 mb-4">
        {currentSite.name}
      </h1>
      <div class="flex flex-col md:flex-row md:items-center gap-4 text-gray-600">
        {currentSite.notes && <p>{currentSite.notes}</p>}
        {currentSite.lat && currentSite.lng && (
          <span class="chip">
            üìç {currentSite.lat.toFixed(4)}, {currentSite.lng.toFixed(4)}
          </span>
        )}
      </div>
    </header>

    <div class="grid lg:grid-cols-3 gap-8">
      <!-- Interactive Chart -->
      <section class="lg:col-span-2">
        <Card>
          <h2 class="text-xl font-semibold text-gray-900 mb-4">
            Bacterial Levels Over Time
          </h2>
          
          <!-- Chart component with built-in controls -->
          <div class="h-80">
            <ResultsChart siteSlug={site} />
          </div>

          <!-- CSV download -->
          <div class="mt-4 text-right">
            <Button 
              href={`/api/export.csv?site=${site}`}
              variant="secondary"
              size="sm"
            >
              üì• Download CSV
            </Button>
          </div>
        </Card>
      </section>

      <!-- Latest results summary -->
      <aside>
        <Card>
          <h3 class="text-lg font-semibold text-gray-900 mb-4">
            Latest Results
          </h3>
          {latestSample ? (
            <div class="space-y-4">
              <div class="text-sm text-gray-500">
                {latestSample.date}
              </div>
              
              <div class="space-y-3">
                <div>
                  <div class="flex justify-between items-center mb-1">
                    <span class="text-sm font-medium">E. coli</span>
                    <span class={`${getResultClass(latestSample.eColi)}`}>
                      {latestSample.eColi} CFU/100ml
                    </span>
                  </div>
                </div>
                
                <div>
                  <div class="flex justify-between items-center mb-1">
                    <span class="text-sm font-medium">Enterococci</span>
                    <span class={`${getResultClass(latestSample.enterococci)}`}>
                      {latestSample.enterococci} CFU/100ml
                    </span>
                  </div>
                </div>

                <div class="pt-3 border-t border-gray-200">
                  <div class="text-sm">
                    <div class="flex justify-between">
                      <span class="text-gray-500">24h rainfall:</span>
                      <span>{latestSample.rainfall24h}mm</span>
                    </div>
                    <div class="flex justify-between">
                      <span class="text-gray-500">72h rainfall:</span>
                      <span>{latestSample.rainfall72h}mm</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            <div class="text-center text-gray-500 py-8">
              <div class="text-2xl mb-2">üìä</div>
              <p>No recent data available</p>
            </div>
          )}
        </Card>

        <!-- Quick safety guidance -->
        <Card class="mt-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-3">
            Safety Guidelines
          </h3>
          <div class="space-y-2 text-sm">
            <div class="flex items-center gap-2">
              <span class="result-safe text-xs px-2 py-1">Safe</span>
              <span class="text-gray-600">&lt; 100 CFU/100ml</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="result-moderate text-xs px-2 py-1">Caution</span>
              <span class="text-gray-600">100-1000 CFU/100ml</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="result-high text-xs px-2 py-1">Avoid</span>
              <span class="text-gray-600">&gt; 1000 CFU/100ml</span>
            </div>
          </div>
        </Card>
      </aside>
    </div>

    <!-- Data table -->
    <section class="mt-8">
      <Card>
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-semibold text-gray-900">
            Recent Samples
          </h2>
        </div>
        
        <Table sortable={true}>
          <thead>
            <tr>
              <th>Date</th>
              <th>E. coli (CFU/100ml)</th>
              <th>Enterococci (CFU/100ml)</th>
              <th>24h Rainfall (mm)</th>
              <th>72h Rainfall (mm)</th>
            </tr>
          </thead>
          <tbody>
            {sampleData.map((sample) => (
              <tr>
                <td class="font-medium">{sample.date}</td>
                <td>
                  <span class={getResultClass(sample.eColi)}>
                    {sample.eColi}
                  </span>
                </td>
                <td>
                  <span class={getResultClass(sample.enterococci)}>
                    {sample.enterococci}
                  </span>
                </td>
                <td>{sample.rainfall24h}</td>
                <td>{sample.rainfall72h}</td>
              </tr>
            ))}
          </tbody>
        </Table>
        
        {sampleData.length === 0 && (
          <div class="text-center text-gray-500 py-8">
            <div class="text-2xl mb-2">üìä</div>
            <p>No sample data available for this site</p>
          </div>
        )}
      </Card>
    </section>
  </main>
</Layout>