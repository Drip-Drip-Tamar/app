---
export interface Props {
  type?: 'info' | 'success' | 'warning' | 'danger';
  dismissible?: boolean;
  class?: string;
}

const { 
  type = 'info',
  dismissible = false,
  class: className = '',
  ...props 
} = Astro.props;

const typeClasses = {
  info: 'bg-info/10 border-info/20 text-info',
  success: 'bg-success/10 border-success/20 text-success',
  warning: 'bg-warning/10 border-warning/20 text-warning',
  danger: 'bg-danger/10 border-danger/20 text-danger'
};

const baseClasses = 'border rounded-lg p-4 mb-4';
const allClasses = [baseClasses, typeClasses[type], className].filter(Boolean).join(' ');

const icons = {
  info: 'ℹ️',
  success: '✅',
  warning: '⚠️',
  danger: '❌'
};
---

<div class={allClasses} role="alert" {...props}>
  <div class="flex items-start gap-3">
    <span class="text-lg flex-shrink-0" aria-hidden="true">
      {icons[type]}
    </span>
    <div class="flex-1">
      <slot />
    </div>
    {dismissible && (
      <button 
        type="button" 
        class="flex-shrink-0 text-current hover:opacity-70 transition-opacity"
        onclick="this.parentElement.parentElement.remove()"
        aria-label="Dismiss alert"
      >
        ✕
      </button>
    )}
  </div>
</div>